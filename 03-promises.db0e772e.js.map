{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,SAAUA,EAAUC,MAAOA,IAErCG,EAAO,CAAEJ,SAAUA,EAAUC,MAAOA,G,GAErCA,E,IAIP,IAAMQ,EAAOC,SAASC,cAAc,SACxBD,SAASC,cAAc,UACnBD,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBAExCF,EAAKG,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBAOF,IAJA,IAAMC,EAAQF,EAAEG,cAAcC,SAAShB,MAAMiB,cACvCC,EAAON,EAAEG,cAAcC,SAASE,KAAKD,cACrCE,EAASP,EAAEG,cAAcC,SAASG,OAAOF,cAEtCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAAG,CAGxDtB,EAAcsB,EAFON,EAAQI,GAAQE,EAAW,IAG7CC,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,sBAAqCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAEpE2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QAAQ,qBAAoCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGxEY,EAAEG,cAAcc,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nconst btn = document.querySelector('button');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n \n\n  const delay = e.currentTarget.elements.delay.valueAsNumber;\n  const step = e.currentTarget.elements.step.valueAsNumber;\n  const amount = e.currentTarget.elements.amount.valueAsNumber;\n\n  for (let position = 1; position <= amount; position += 1) {\n    const promiseDelay = delay + step * (position - 1);\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  e.currentTarget.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","e","preventDefault","delay1","currentTarget","elements","valueAsNumber","step","amount","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.db0e772e.js.map"}